@page "/reset-password"
@inject NavigationManager NavigationManager
@layout AuthLayout
@inject StateContainer StateContainer


<EditForm FormName="ResetPasswordForm" Model="ResetPasswordModel" OnValidSubmit="ResetPasswordAsync">

    <div class="mb-3">
        <label>Email</label>
        <InputText id="email" @bind-Value="ResetPasswordModel.Email" class="form-control" />
        <ValidationMessage For="@(() => ResetPasswordModel.Email)" />
        <FieldErrorComponent Errors="Errors" FieldName="Email_Error" />
        <button type="submit" class="btn btn-outline-primary">Sumbit</button>
    </div>

</EditForm>

@code
{
    private ResetPasswordRequestDto ResetPasswordModel { get; set; } = new();
    private CLoadingStatus LoadingStatus { get; set; } = new();
    private List<ErrorDetail> Errors { get; set; } = new();


    private async Task ResetPasswordAsync()
    {
        try
        {
            LoadingStatus.IsLoading = true;
            var response = await ApiClient.PostAsync<ResetPasswordRequestDto, ResultMessage>(
            uri: APIEndpoint.CET_Auth_ResetPassword, data: ResetPasswordModel,
            requestType: CRequestType.Public);
            LoadingStatus.IsLoading = false;
            if (response != null)
            {
                if (response.Success)
                {
                    string status = Uri.EscapeDataString(response.Data?.Success.ToString() ?? string.Empty);
                    string message = Uri.EscapeDataString(response.Data?.Message ?? string.Empty);
                    NavigationManager.NavigateTo($"/notification-summary/?success={status}&message={message}");
                }
                else
                {
                    var errorMessage = ToastHelper.ErrorMessage<ResultMessage>(response: response);
                    if (!string.IsNullOrEmpty(errorMessage))
                    {
                        _toastService.ShowError(errorMessage);
                    }
                }
            }
            else
            {
                _toastService.ShowError($"An error occured while send request to reset password");
            }
        }
        catch (Exception ex)
        {
            LoadingStatus.IsLoading = false;
            _toastService.ShowError(ex.Message);
        }
        await Task.CompletedTask;
    }
}