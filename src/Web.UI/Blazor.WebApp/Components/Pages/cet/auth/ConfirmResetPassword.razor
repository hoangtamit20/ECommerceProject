@page "/confirm-reset-password"
@layout AuthLayout
@inject NavigationManager NavigationManager
@inject StateContainer StateContainer


<PageTitle>Confirm Reset Password</PageTitle>

<section class="vh-100">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-black" style="border-radius: 25px; background-color: rgba(255, 255, 255, 0.49);">
                    <div class="card-body p-md-5">
                        <div class="row justify-content-center">
                            <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Confirm Reset Your Password</p>
                                <div class="reset-password-instructions text-secondary card-text mb-4">
                                    <p style="text-align: justify; text-justify: inter-word;">1. Please enter your new
                                        password below. Ensure that your password meets the security requirements,
                                        including a mix of uppercase and lowercase letters, numbers, and special
                                        characters. Once submitted, you will no longer be able to use your previous
                                        password.</p>

                                    <p style="text-align: justify; text-justify: inter-word;">2. For your security,
                                        avoid using easily guessable passwords, such as your name or date of birth. If
                                        you encounter any issues, contact support for assistance.</p>
                                </div>

                                <EditForm Model="ConfirmResetPasswordModel" OnValidSubmit="ConfirmResetPasswordAsync"
                                    FormName="registerForm" class="mx-1 mx-md-4">
                                    @* <DataAnnotationsValidator /> *@
                                    <!-- Password Input -->
                                    <div class="mb-4">
                                        <div class="input-group">
                                            <span class="input-group-text bg-white"><i
                                                    class="bi bi-lock text-primary fw-bold"></i></span>
                                            <InputText id="newPassword"
                                                @bind-Value="ConfirmResetPasswordModel.NewPassword" class="form-control"
                                                type="password" placeholder="Enter your new password" />
                                        </div>
                                        <ValidationMessage For="@(() => ConfirmResetPasswordModel.NewPassword)" />
                                        <FieldErrorComponent Errors="Errors" FieldName="NewPassword_Error" />
                                    </div>

                                    <!-- Confirm Password Input -->
                                    <div class="mb-4">
                                        <div class="input-group">
                                            <span class="input-group-text bg-white"><i
                                                    class="bi bi-lock text-primary fw-bold"></i></span>
                                            <InputText id="newPasswordConfirm"
                                                @bind-Value="ConfirmResetPasswordModel.NewPasswordConfirm"
                                                class="form-control" type="password"
                                                placeholder="Repeat your password" />
                                        </div>
                                        <ValidationMessage
                                            For="@(() => ConfirmResetPasswordModel.NewPasswordConfirm)" />
                                        <FieldErrorComponent Errors="Errors" FieldName="NewPasswordConfirm_Error" />
                                    </div>

                                    <!-- Register Button -->
                                    <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                                        <button type="submit" data-mdb-button-init data-mdb-ripple-init
                                            class="btn btn-primary btn-lg">Submit</button>
                                    </div>

                                </EditForm>

                            </div>
                            <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

                                <img src="images/auth/ConfirmResetPassword.png" class="img-fluid" alt="Sample image">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@if (LoadingStatus.IsLoading)
{
    <Blazor.WebApp.Components.Spinners.LoadingApi />
}


@code
{
    private ConfirmResetPasswordRequestDto ConfirmResetPasswordModel { get; set; } = new();
    private List<ErrorDetail> Errors { get; set; } = new();
    private CLoadingStatus LoadingStatus { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await AuthenticationHelper.AuthenticationAsync(loadingStatus: LoadingStatus, apiClient: ApiClient,
        stateContainer: StateContainer, navigationManager: NavigationManager,
        localStorage: _localStorage, toastService: _toastService);
        try
        {
            ConfirmResetPasswordModel = QueryStringHelper.GetQueryParameters<ConfirmResetPasswordRequestDto>(NavigationManager);
        }
        catch (Exception ex)
        {
            var queryString = LinkHelper.ToQueryString<ResultMessage>(obj: new ResultMessage()
                {
                    Level = CNotificationLevel.Error,
                    Message = ex.Message,
                    NotificationType = CNotificationType.Normal
                });
            NavigationManager.NavigateTo($"/notification-summary/?{queryString}");
        }
        await Task.CompletedTask;
    }

    private async Task ConfirmResetPasswordAsync()
    {
        try
        {
            LoadingStatus.IsLoading = true;
            var response = await ApiClient.PostAsync<ConfirmResetPasswordRequestDto, ResultMessage>(
            uri: APIEndpoint.CET_Auth_ConfirmPasswordReset,
            data: ConfirmResetPasswordModel,
            requestType: CRequestType.Public);
            LoadingStatus.IsLoading = false;
            Errors = response?.Errors ?? new();
            if (response != null)
            {
                if (response.Success)
                {
                    var queryString = LinkHelper.ToQueryString<ResultMessage>(obj: response?.Data ?? new());
                    NavigationManager.NavigateTo(uri: $"/notification-summary/?{queryString}");
                }
                else
                {
                    var error = ToastHelper.ErrorMessage<ResultMessage>(response: response);
                    _toastService.ShowError(error);
                }
            }
            else
            {
                _toastService.ShowError("An error occurred while send request to confirm password reset.");
            }
        }
        catch (Exception ex)
        {
            LoadingStatus.IsLoading = false;
            _toastService.ShowError(ex.Message);
        }
        await Task.CompletedTask;
    }
}